<header class="fixed top-0 left-0 right-0 z-50 bg-white border-b border-gray-200 shadow-sm">
  <div class="px-4 py-3 lg:px-6">
    <div class="flex items-center justify-between">
      <div class="flex items-center justify-start">
        <button @click="$store.sidebar.open = !$store.sidebar.open" class="p-2 text-gray-500 rounded-lg cursor-pointer lg:hidden hover:text-blue-600 hover:bg-gray-100">
          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path>
          </svg>
        </button>
        <a href="index.html" class="flex ml-2 md:mr-24">
          <span class="self-center text-xl font-semibold whitespace-nowrap text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-blue-400">Chua Phuc Minh Admin</span>
        </a>
      </div>
      
      <!-- User dropdown -->
      <div class="flex items-center" x-data="{
        dropdownOpen: false,
        user: null,
        isLoading: true,
        init() {
          this.loadUser();
        },
        async loadUser() {
          try {
            const token = localStorage.getItem('access_token');
            if (!token) {
              this.isLoading = false;
              return;
            }
            
            const response = await fetch('http://192.168.0.200:8000/api/accounts/profile/', {
              headers: { 'Authorization': `Bearer ${token}` }
            });
            
            if (response.ok) {
              this.user = await response.json();
            }
          } catch (error) {
            console.error('Error loading user:', error);
          } finally {
            this.isLoading = false;
          }
        },
        getInitials() {
          if (!this.user) return 'AD';
          const name = this.user.full_name || this.user.username;
          return name.split(' ')
            .filter(part => part.length > 0)
            .map(part => part[0])
            .join('')
            .toUpperCase()
            .substring(0, 2);
        },
        async logout() {
          try {
            await fetch('http://192.168.0.200:8000/api/accounts/logout/', {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${localStorage.getItem('access_token')}`,
                'Content-Type': 'application/json'
              }
            });
          } catch (error) {
            console.error('Logout error:', error);
          }
          localStorage.removeItem('access_token');
          localStorage.removeItem('refresh_token');
          window.location.href = '/login.html';
        }
      }">
        <template x-if="!isLoading">
          <button @click="dropdownOpen = !dropdownOpen" class="flex items-center text-sm rounded-full focus:ring-4 focus:ring-gray-300">
            <span class="sr-only">Open user menu</span>
            <div class="relative w-8 h-8 overflow-hidden bg-gradient-to-br from-blue-500 to-blue-300 rounded-full flex items-center justify-center">
              <span class="text-white font-medium text-sm" x-text="getInitials()"></span>
            </div>
            <span class="ml-2 text-gray-700 font-medium hidden md:inline" x-text="user ? user.username : 'Guest'"></span>
            <svg class="w-2.5 h-2.5 ml-1.5 text-gray-500 transition-transform" :class="{'rotate-180': dropdownOpen}" fill="none" viewBox="0 0 10 6">
              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
            </svg>
          </button>
        </template>
        
        <!-- Dropdown menu -->
        <div x-show="dropdownOpen" @click.away="dropdownOpen = false" 
             x-transition:enter="transition ease-out duration-100"
             x-transition:enter-start="transform opacity-0 scale-95"
             x-transition:enter-end="transform opacity-100 scale-100"
             x-transition:leave="transition ease-in duration-75"
             x-transition:leave-start="transform opacity-100 scale-100"
             x-transition:leave-end="transform opacity-0 scale-95"
             class="absolute right-4 z-50 mt-2 w-64 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
             style="top: 100%;">
          <template x-if="user">
            <div class="px-4 py-2 border-b">
              <p class="text-sm font-medium text-gray-900 truncate" x-text="user.full_name || user.username"></p>
              <p class="text-xs text-gray-500 truncate" x-text="user.email"></p>
            </div>
          </template>
          <a href="#" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Cài đặt</a>
          <a href="#" @click.prevent="logout" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Đăng xuất</a>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
document.addEventListener('alpine:init', () => {
  Alpine.store('sidebar', {
    open: window.innerWidth >= 1024,
    toggle() {
      this.open = !this.open;
    }
  });
});
</script>
