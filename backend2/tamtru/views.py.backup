# views.py
from docx import Document
import os
from django.http import FileResponse
from rest_framework.decorators import api_view
from rest_framework.response import Response
from django.conf import settings
import mimetypes

@api_view(['POST'])
def generate_tam_tru(request):
    try:
        # Lấy dữ liệu từ FE
        data = request.data

        # Đường dẫn tới file template
        template_path = os.path.join(settings.BASE_DIR, 'tamtru', 'file', 'CT01.docx')

        # Kiểm tra file template có tồn tại không
        if not os.path.exists(template_path):
            return Response({'error': 'Template file not found'}, status=404)

        # Mở file template
        doc = Document(template_path)

        # Mapping giữa placeholder và dữ liệu thực tế
        replacements = {
            '{{fullname}}': data.get('fullname', ''),
            '{{birthday}}': data.get('birthday', ''),
            '{{gender}}': data.get('gender', ''),
            '{{cccd}}': data.get('cccd', ''),
            '{{username}}': data.get('username', ''),
            '{{email}}': data.get('email', ''),
            '{{address}}': data.get('address', '')
        }

        # Thay thế trong đoạn văn
        for paragraph in doc.paragraphs:
            for key, value in replacements.items():
                if key in paragraph.text:
                    paragraph.text = paragraph.text.replace(key, value)

        # Thay thế trong bảng
        for table in doc.tables:
            for row in table.rows:
                for cell in row.cells:
                    for key, value in replacements.items():
                        if key in cell.text:
                            cell.text = cell.text.replace(key, value)

        # Tạo thư mục output nếu chưa có
        output_dir = os.path.join(settings.MEDIA_ROOT, 'tam_tru_docs')
        os.makedirs(output_dir, exist_ok=True)

        # Lưu file tạm
        output_filename = f"CT01_{data.get('cccd', '')}.docx"
        output_path = os.path.join(output_dir, output_filename)
        doc.save(output_path)

        # Đảm bảo trả về đúng content-type của file Word
        content_type, _ = mimetypes.guess_type(output_path)
        content_type = content_type or 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'

        # Trả file để frontend tải về
        return FileResponse(
            open(output_path, 'rb'),
            as_attachment=True,
            filename=output_filename,
            content_type=content_type
        )

    except Exception as e:
        return Response({'error': str(e)}, status=500)

